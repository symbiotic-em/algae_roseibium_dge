library(tidyverse)
library(ggpubr)
library(rstatix)
library(ggplot2)

setwd("/Users/thesis_ssa01_b12/ssa01_b12_subculture_growth_curves")
b12<-read.csv("b12_counts_for_lm.csv")
b12
# Change line types by groups (supp)
ggplot(b12, aes(x=time, y=Counts, group=Treatment)) +
  geom_line(aes(linetype=Treatment))+ facet_wrap(~Type)+
  geom_smooth()

# Change line types, point shapes and colors
ggplot(df, aes(x=dose, y=len, group=supp)) +
  geom_line(aes(linetype=supp, color = supp))+
  geom_point(aes(shape=supp, color = supp))

b12$Counts=as.numeric(b12$Counts)



#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
  # for each group
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
  #to be summarized
# groupnames : vector of column names to be used as
  # grouping variables
data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- rename(data_sum, c("mean" = varname))
 return(data_sum)
}
#Summarize the data :

b12_df3 <- data_summary(b12, varname="Counts", 
                    groupnames= c("Treatment", "time", "Type"))
head(b12_df3)

write.csv(b12_df3, "ssa01_growth_curve_summary.csv")

# Simple line plot
# Change point shapes and line types by groups
a= ggplot(b12_df3, aes(x=time, y=Counts, group = Treatment, color = Treatment))+ 
    geom_errorbar(aes(ymin=Counts-sd, ymax=Counts+sd), width=.1, 
    position=position_dodge(0.05)) +
scale_y_continuous(trans='log10', "SSA01 counts (cells/mL)")+
geom_point(size=5)+
   geom_smooth(se=F)+ 
scale_color_manual(values=c("#999999", "#E69F00","#660066","#999900", "#000000"), limits=c("low_density", "mid_density", "high_density", "b12", "no_b12"))+
facet_wrap(~Type)+
       theme_bw()

a + scale_x_continuous(breaks=c(0, 4, 8, 12), "time (weeks)") + theme(text = element_text(size = 20))    


############## two-way repeated measures of ANOVA R #################
##https://www.datanovia.com/en/lessons/repeated-measures-anova-in-r/

b12= read.csv("round_2_cts_for_ANOVA.csv") #or see below vvv to subset the sym only counts vvv
#b12=subset(b12, Type %in% c("coculture")) #subset to mono or coculture
b12


#group by treatment and time
b12_2 <- b12 %>%
  gather(key = "time", value = "score", Week_0, Week_1, Week_2, Week_3, Week_4, Week_5, Week_7) %>%
  convert_as_factor(Replicates, Treatment, time)

data.frame(head(b12_2, 3))
# Inspect some random rows of the data by groups

#set.seed(123)
#b12_2 %>% sample_n_by(split_treatment, time, size = 1)

#get basic stats
summary= b12_2 %>%
  group_by(Treatment, time) %>%
  get_summary_stats(score, type = "mean_sd")
data.frame(summary)

#write as csv
write.csv(b12_2, "round_2_mean_sd_stats.csv")


#visualize data you want to test
bxp <- ggboxplot(b12_2, x = "time", y = "score",
  color = "Treatment" )
bxp

#identify outliers
outlier= b12_2 %>%
  group_by(Treatment, time) %>%
  identify_outliers(score)
data.frame(outlier) #no outliers

##qqplot
ggqqplot(b12_2, "score", ggtheme = theme_bw()) +
  facet_grid(time~Treatment, labeller = "label_both")

### two-way repeated measures ANOVA ###########
#type =3 for type III anova below
res.aov <- anova_test(
  data = b12_2, dv = score, wid = Replicates,
 between = c(Treatment, time), type=3) 
get_anova_table(res.aov)

#yes statistically significant two-way interactions between treatment and time

###########ROUND 1 ############

#Effect DFn DFd       F        p p<.05   ges
#1      Treatment   1  20   4.933 3.80e-02     * 0.198
#2           time   4  20 176.620 2.68e-15     * 0.972
#3 Treatment:time   4  20   4.462 1.00e-02     * 0.472
 
########ROUND 2 #################
 #  Effect DFn DFd       F        p p<.05      ges
#1      Treatment   1  28   1.680 2.06e-01       0.057
#2           time   6  28 248.890 5.93e-23     * 0.982
#3 Treatment:time   6  28   2.905 2.50e-02     * 0.384

######Round 3 ###############

#      Effect DFn DFd           F        p p<.05      ges
#1      Treatment   1  16 3.03000e-06 9.99e-01       1.89e-07
#2           time   3  16 2.75679e+02 5.57e-14     * 9.81e-01
#3 Treatment:time   3  16 2.34000e-01 8.71e-01       4.20e-02



####### Post-hoc test

# Effect of time at each level of treatment
one.way2 <- b12_2 %>%
  group_by(Treatment) %>%
  anova_test(dv = score, wid = Replicates, within = time) %>%
  get_anova_table() %>%
  adjust_pvalue(method = "bonferroni")
one.way2

###### ROUND 1 ############
# A tibble: 2 × 9
 # Treatment Effect   DFn   DFd     F            p `p<.05`   ges        p.adj
 # <fct>     <chr>  <dbl> <dbl> <dbl>        <dbl> <chr>   <dbl>        <dbl>
#1 b12       time       4     8  57.0 0.00000643   *       0.964 0.0000129   
#2 no_b12    time       4     8 229.  0.0000000278 *       0.987 0.0000000556

###### ROUND 2 ###########
# A tibble: 2 × 9
#  Treatment Effect   DFn   DFd     F        p `p<.05`   ges    p.adj
#  <fct>     <chr>  <dbl> <dbl> <dbl>    <dbl> <chr>   <dbl>    <dbl>
#1 b12       time       6    12  98.2 1.71e- 9 *       0.976 3.42e- 9
#2 no_b12    time       6    12 183.  4.40e-11 *       0.986 8.80e-11
###### Round 3 ##############
# A tibble: 2 × 9
 # Treatment Effect   DFn   DFd     F          p `p<.05`   ges      p.adj
#  <fct>     <chr>  <dbl> <dbl> <dbl>      <dbl> <chr>   <dbl>      <dbl>
#1 b12       time    1.06  2.12  111. 0.007      *       0.976 0.014     
#2 no_b12    time    3     6     241. 0.00000121 *       0.987 0.00000242


# Pairwise comparisons between time points
pwc2 <- b12_2 %>%
  group_by(time) %>%
  pairwise_t_test(
    score ~ Treatment, paired = TRUE,
    p.adjust.method = "bonferroni"
    )
pwc2

########### ROUND 1 ##################
# A tibble: 5 × 11
 # time   .y.   group1 group2    n1    n2 statistic    df     p p.adj p.adj.signif
#* <fct>  <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl> <dbl> <dbl> <chr>       
#1 Week_0 score b12    no_b12     3     3    -1.15      2 0.368 0.368 ns          
#2 Week_1 score b12    no_b12     3     3    -1.29      2 0.327 0.327 ns          
#3 Week_2 score b12    no_b12     3     3     5.88      2 0.028 0.028 *           
#4 Week_3 score b12    no_b12     3     3    -0.340     2 0.766 0.766 ns          
#5 Week_4 score b12    no_b12     3     3     2.52      2 0.128 0.128 ns 

########## ROUND 2 ##################
# A tibble: 7 × 11
#  time   .y.   group1 group2    n1    n2 statistic    df     p p.adj p.adj.signif
#* <fct>  <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl> <dbl> <dbl> <chr>       
#1 Week_0 score b12    no_b12     3     3     0.400     2 0.728 0.728 ns          
#2 Week_1 score b12    no_b12     3     3     1.32      2 0.317 0.317 ns          
#3 Week_2 score b12    no_b12     3     3    -1.43      2 0.289 0.289 ns          
#4 Week_3 score b12    no_b12     3     3    -2         2 0.184 0.184 ns          
#5 Week_4 score b12    no_b12     3     3     0.283     2 0.804 0.804 ns          
#6 Week_5 score b12    no_b12     3     3     0.723     2 0.545 0.545 ns          
#7 Week_7 score b12    no_b12     3     3    -3         2 0.096 0.096 ns   

########## ROUND 3 ##################
 # A tibble: 4 × 11
#  time   .y.   group1 group2    n1    n2 statistic    df     p p.adj p.adj.signif
#* <fct>  <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl> <dbl> <dbl> <chr>       
#1 Week_0 score b12    no_b12     3     3   -1.42       2 0.292 0.292 ns          
#2 Week_3 score b12    no_b12     3     3   -1.96       2 0.188 0.188 ns          
#3 Week_6 score b12    no_b12     3     3   -0.0258     2 0.982 0.982 ns          
#4 Week_8 score b12    no_b12     3     3    0.756      2 0.529 0.529 ns  

#save pwc for reference later 
write.csv(pwc2, "round_2_subculture_twowayanova_stats.csv")


#repeat all code above for each round  ^^^^^^^^^^^^^^^^^
